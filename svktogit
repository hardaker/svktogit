#!/usr/bin/perl

use strict;
use Getopt::GUI::Long;
use Cwd;

my %opts;

Getopt::GUI::Long::Configure(qw(display_help no_ignore_case no_gui));
GetOptions(\%opts,
	   ["GUI:separator",   "Steps to perform (default = all):"],

	   ["GUI:separator",   "Configuration:"],
	   ["t|temp-directory=s","Temporary directory to use"],
	   ["m|mirror-path=s",   "SVK's mirror path (default=//m)"],

	   ["GUI:separator",   "Other Flags:"],
	   ["n|dry-run",       "Don't actually do anything; just print the commands"],
	   ["N|no-clean",      "Don't remove the temporary SVN repository"],
	  );

my $dryrun=$opts{'n'};

if ($#ARGV <= 1) {
    print STDERR "Both SVKPATH and PROJECT arguments are required\n";
    exit(1);
}

my $svkpath=$ARGV[0];
my $project=$ARGV[1];
my $mirror=$opts{'m'} || "//m";
my $tmpdir=$opts{'t'} || "/tmp/svktogit.$$";
my $svnrepo="$tmpdir/svnrepo-$project";

if ($project eq '' || $svkpath eq "") {

  print "invalid usage\n";
  print "$0 SVKPATH PROJECTNAME\n";
  exit 1;
}

# setup the new svn repo
RUN("mkdir $tmpdir");

my $cwd = getcwd;
chdir("$tmpdir");
RUN("svnadmin create svnrepo-$project");
chdir("$cwd");

# mirror it into svk
RUN("svk mirror file://$svnrepo $mirror/svktogit-$project");
RUN("svk sync $mirror/svktogit-$project");

# sync the local svk repo to the new svn mirror
RUN("svk smerge --incremental --baseless $svkpath $mirror/svktogit-$project");

# git clone it back now
RUN("git svn clone -s file://$svnrepo $project");

print "-- DONE\n";

if (!$opts{'N'}) {
    RUN("rm -rf $tmpdir");
} else {
    print "leaning $tmpdir intact\n";
}

sub RUN {
    print (@_,"\n");
    if (!$dryrun) {
	system(@_);
	exit if ($? != 0);
    }
}

